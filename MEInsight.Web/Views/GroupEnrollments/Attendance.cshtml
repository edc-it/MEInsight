@* ******* Model as <List> ******* *@
@model List<MEInsight.Entities.Programs.GroupEnrollment>

@{
    ViewData["Title"] = @Localizer["Group Attendance"].Value + " " + @Localizer["List"].Value;
}

<!--content start-->
    <div class="slide-in-right">
        <!--heading start-->
        <div class="card mb-3 heading-panel">
            <div class="card-body">
                <h2 class="card-title mt-3 fw-bold mb-0">@Localizer["Group Attendance"]</h2>
                <span class="card-text text-muted">@Localizer["Update Attendance"]</span>
            </div>
        </div>
        <!--heading end-->
        @await Component.InvokeAsync("InfoPanel", new { id = Convert.ToString(ViewBag.ParentId), controller = "GroupEnrollments" })
        <!--toolbars start-->
        <div class="row mb-3">
            <div class="col-sm-12 col-md-6 d-flex align-items-center justify-content-start">
                <div id="toolbar" class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
                    <!--create start-->
                    <div class="btn-group btn-group-sm mb-2" role="group" aria-label="creategroup">
                        
                    </div>
                </div>
            </div>
            <div class="col-sm-12 col-md-6 d-flex align-items-center justify-content-end">
                <!--datatable search start-->
                <div class="input-group input-group-sm d-print-none mb-2">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i class="fa fa-search" aria-hidden="true"></i></span>
                    </div>
                    <input id="searchbox" type="text" class="form-control" placeholder='@Localizer["Search"]' aria-describedby="searchbox">
                </div>
                <!--datatable search end-->
            </div>
        </div>
        <!--toolbars end-->
        <!--datatable start-->
        <div class="row">
            <div class="col-sm-12">
                <form id="main-form" asp-action="Attendance">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" value="@ViewBag.ParentId" name="GroupId" id="GroupId" />
                    <!--table start-->
                    <table id="datatable" class="table table-sm table-hover table-striped responsive no-wrap w-100">
                        <thead>
                            <tr>
                                <th data-priority="1">
                                    @Localizer["Name"]
                                </th>
                                <th>
                                    @Localizer["Participant Code"]
                                </th>
                                <th>
                                    @Localizer["Sex"]
                                </th>
                                <th class="text-end" data-priority="1">
                                    @Localizer["Total Attendance"] @ViewBag.AttendanceUnit / @Localizer["Status"]
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Count(); i++)
                            {
                                <tr>
                                    <td class="text-uppercase text-bold">
                                        @Html.Hidden("attendance.Index", (@i + 10))
                                        @Html.Hidden("attendance[" + (@i + 10) + "].GroupEnrollmentId", Model[i].GroupEnrollmentId)
                                        @Html.Hidden("attendance[" + (@i + 10) + "].GroupId", Model[i].GroupId)

                                        @Html.Raw(Model[i].Participants?.Name)
                                    </td>
                                    <td>
                                        @Html.Raw(Model[i].Participants?.ParticipantCode)
                                    </td>
                                    <td>
                                        @Html.Raw(Model[i].Participants?.Sex?.SexId)
                                    </td>
                                    <td class="text-end">
                                        <div class="input-group input-group-sm d-flex justify-content-end">
                                            @Html.TextBox("attendance[" + (@i + 10) + "].Attendance", Model[i].Attendance, new { @Class = "attendance form-control input-sm validate text-end", data_attendance = i, tabindex = i + 1, data_val = "true", data_val_required = Localizer["The Attendance field is required"].Value, autocomplete = "off" })
                                            <div class="input-group-append">
                                                <span class="input-group-text">
                                                    @ViewBag.AttendanceUnit
                                                </span>
                                            </div>
                                            <select class="form-control form-select status input-sm" name="attendance[@(i + 10)].RefEnrollmentStatusId" id="attendance[@(i + 10)].RefEnrollmentStatusId" data-completed="@i">
                                                @foreach (SelectListItem item in (IEnumerable<SelectListItem>)ViewBag.RefEnrollmentStatusId)
                                                {
                                                    if (item.Value == Model[i].RefEnrollmentStatusId.ToString())
                                                    {
                                                        <option value="@(item.Value)" selected="selected">@item.Text</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@(item.Value)">@item.Text</option>
                                                    }
                                                }
                                            </select>
                                        </div>
                                        <span style="display:block;" data-valmsg-for="attendance[@(i + 10)].Attendance" class="text-danger field-validation-valid" data-valmsg-replace="true"></span>
                                        <span style="display:block;" data-valmsg-for="attendance[@(i + 10)].RefEnrollmentStatusId" class="text-danger field-validation-valid" data-valmsg-replace="true"></span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <!--table end-->
                </form>

            </div>
        </div>
        <!--datatable end-->
        <!--datatable pagination start-->
        <div class="row">
            <div class="col-sm-12 col-md-5 d-flex align-items-center justify-content-start"><div class="" id="detailfooter"></div></div>
            <div class="col-sm-12 col-md-7 d-flex align-items-center justify-content-end">
                <div class="" id="datatables-pagination"></div>
            </div>
        </div>
        <!--datatable pagination end-->
        <!--footer buttons start-->
        <div class="row mt-5">
            <div class="col">
                @if (ViewBag.ParentController != null)
                {
                    <a asp-controller="ViewBag.ParentController" asp-route-id="@ViewBag.ParentId" class="btn btn-secondary"><i class="fas fa-chevron-left"></i> @Localizer["Back"]</a>
                }
            </div>
            <div class="col text-end">
                <br />
                <div class="mb-3">
                    <a class="btn btn-secondary" asp-action="Index" asp-route-id="@ViewBag.ParentId"><i class="fa fa-times" aria-hidden="true"></i> @Localizer["Cancel"]</a>
                    <button id="submitbutton" type="submit" value="Attendance" class="btn btn-secondary ladda-button" data-style="expand-left" data-spinner-color="black">
                        <span class="ladda-label">
                            <i class="fa fa-check" aria-hidden="true"></i> @Localizer["Save"]
                        </span>
                    </button>
                </div>
            </div>
        </div>
        <!--footer buttons end-->
    </div><!--content end-->

@section Styles {
    @{await Html.RenderPartialAsync("_UpdateListStylesPartial");}
<style>
    .status {
        max-width: 120px;
    }

    .attendance {
        max-width: 70px;
    }

    .table td {
        vertical-align: baseline;
    }
</style>

}
@section Scripts {
    @{await Html.RenderPartialAsync("_UpdateListScriptsPartial");}
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>

        //Set to validate "hidden" required fields (with .validate class) that might be set to hidden or display none by Datatables responsive
        //$.validator.setDefaults({ ignore: ":hidden:not(.validate)" });

        $(document).ready(function () {

            //Accept only numbers from 0 to 999
            Inputmask.extendAliases({
                'attendance': {
                    alias: "numeric",
                    mask: "999",
                    placeholder: '',
                    allowPlus: false,
                    allowMinus: false
                }
            });

            Inputmask("attendance").mask(".attendance");
            //$(".attendance").inputmask("999");


            var min = @ViewBag.Min;
            var max = @ViewBag.Max;

            //if max is 0 - Training Attendance is manually updated
            if (max != 0) {
                $(".attendance").on("focusout", function () {
                    var approved = $(this).val();
                    if (approved > max) {
                        $(this).val("");
                        var index = this.name.split('[').pop().split(']').shift();
                        //$('[name="attendance[' + index + '].RefCourseStatusId"]').val("1");
                        console.log('cannot register more than')
                        $.toast({
                            title: '<i class="fas fa-check-circle"> @Localizer["Alert"]</i> ',
                            subtitle: '',
                            content: '@Localizer["You cannot register more than"] <strong>" + max + " @Localizer["attendance"] @Html.Raw(@ViewBag.AttendanceUnit)</strong> @Localizer["for this training."]',
                            type: 'primary',
                            delay: 5000,
                            pause_on_hover: true
                        });
                        //toastr.error("@Localizer["You cannot register more than"] <strong>" + max + " @Localizer["attendance"] @Html.Raw(@ViewBag.AttendanceUnit)</strong> @Localizer["for this training."]", "Error!");
                    }
                    //Status = 1 -enrolled
                    if (approved < min) {
                        var index = this.name.split('[').pop().split(']').shift();
                        $('[name="attendance[' + index + '].RefEnrollmentStatusId"]').val("1");
                    }
                    //Status = 2 -completed
                    if (approved >= min && approved <= max) {
                        var index = this.name.split('[').pop().split(']').shift();
                        $('[name="attendance[' + index + '].RefEnrollmentStatusId"]').val("2");
                    }
                });

                $(".status").change(function () {
                    console.log('status');
                    var status = $(this).val();
                    var index = this.name.split('[').pop().split(']').shift();
                    var approved = $('input[name="attendance[' + index + '].Attendance"]').val();
                    var $status = $('[name="attendance[' + index + '].RefEnrollmentStatusId"]');
                    if (status == "2") {
                        if (approved < min) {

                            $('[name="attendance[' + index + '].RefEnrollmentStatusId"]').val("1");
                            console.log('toast - cannot apply status of')
                            //toastr.error("@Localizer["You cannot apply the status of"] <strong>@Localizer["COMPLETED"]</strong> @Localizer["if the attendance"] @Html.Raw(@ViewBag.AttendanceUnit) @Localizer["are less than the"] <strong>" + min + " @ViewBag.AttendanceUnit</strong> @Localizer["required by the Training."] <br /><br />@Localizer["Status has been reset."]", "Error!");
                        }
                    }
                });
            }

            //Prevent Enter Key from submitting form
            $(window).keydown(function(event){
                if(event.keyCode == 13) {
                    event.preventDefault();
                    return false;
                }
            });
        });
    </script>
}
