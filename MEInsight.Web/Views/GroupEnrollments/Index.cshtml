@model IEnumerable<MEInsight.Entities.Programs.GroupEnrollment>

@{
    ViewData["Title"] = @Localizer["Group Enrollments"].Value + " " + @Localizer["List"].Value;
}

<!--content start-->
<div class="">
    <!--heading start-->
    <div class="card mb-3 heading-panel">
        <div class="card-body">
            <h2 class="card-title mt-3 fw-bold mb-0">@Localizer["Group Enrollments"]</h2>
            <span class="card-text text-muted">@Localizer["List of"] @Localizer["Group Enrollments"]</span>
        </div>
    </div>
    <!--heading end-->
    <!--infopanel start-->
    @await Component.InvokeAsync("InfoPanel", new { id = Convert.ToString(ViewBag.ParentId), controller = "GroupEnrollments" })
    <!--infopanel end-->
    <!--toolbars start-->
    <div class="row mb-3">
        <div class="col-sm-12 col-md-6 d-flex align-items-center justify-content-start">
            <div id="toolbar" class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">


                @if (ViewBag.Closed == true)
                {
                    <!--open button start-->
                    <div policy="RequireMELRole" class="input-group input-group-sm mb-2 me-3" role="group" aria-label="closegroup">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white" id="basic-addon1">M&E:</span>
                        </div>
                        <button id="btn-open" type="button" class="btn btn-secondary btn-sm">
                            <i class="fas fa-lock-alt"></i> @Localizer["Re-open Group"]
                        </button>
                    </div>
                    <!--open button end-->
                }
                else
                {
                    <!--create start-->
                    <div class="btn-group btn-group-sm mb-2" role="group" aria-label="creategroup">
                        <!--button group start-->
                        <!--create button dropdown start-->
                        <div policy="RequireCreateRole" class="btn-group btn-group-sm" role="group">
                            <button id="btnGroupDrop1" type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-plus"></i> @Localizer["Create New"]
                            </button>
                            <div class="dropdown-menu" aria-labelledby="btnGroup1Drop1">
                                <!--dropdown items by ParticipantType-->
                                @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.ParticipantTypeId)
                                {
                                    <a asp-action="Create" asp-route-OrganizationId="@ViewBag.OrganizationId" asp-controller="Participants" asp-route-GroupId="@ViewBag.ParentId" asp-route-RefParticipantTypeId="@item.Value" role="button" class="btn btn-primary dropdown-item">
                                        <i class="fas fa-plus"></i> @Localizer["New"] @item.Text
                                    </a>
                                }

                            </div>
                        </div>
                        <!--enroll button start-->
                        <a policy="RequireCreateRole" asp-route-id="@ViewBag.ParentId" asp-action="Create" class="btn btn-primary"><i class="fas fa-user-plus"></i> @Localizer["Add Existing"]</a>
                        <!--enroll button end-->
                        <!--create button dropdown end-->
                        @*<a policy="RequireCreateRole" asp-route-id="@ViewBag.ParentId" asp-action="Enroll" class="btn btn-secondary"><i class="fas fa-user-plus"></i> @Localizer["Enroll Existing"]</a>*@
                        <!--update attendance button start-->
                        <a policy="RequireEditRole" asp-route-id="@ViewBag.ParentId" asp-action="Attendance" class="btn btn-secondary"><i class="far fa-calendar-alt"></i> @Localizer["Update Attendance"]</a>
                        <!--update attendance button end-->

                    </div>
                    <!--create end-->
                    <!--close button start-->
                    <div policy="RequireMELOfficerRole" class="btn-group btn-group-sm mb-2" role="group" aria-label="closegroup">
                        <button id="btn-close" type="button" class="btn btn-warning">
                            <i class="fas fa-unlock-alt"></i> @Localizer["Close"]
                        </button>
                    </div>
                    <!--close button end-->
                }


            </div>
        </div>
        <div class="col-sm-12 col-md-6 d-flex align-items-center justify-content-end">
            <!--datatable search start-->
            <div class="input-group input-group-sm d-print-none mb-2">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-search" aria-hidden="true"></i></span>
                </div>
                <input id="searchbox" type="text" class="form-control" placeholder='@Localizer["Search"]' aria-describedby="searchbox">
            </div>
            <!--datatable search end-->
        </div>
    </div>
    <!--toolbars end-->
    <!--datatable start-->
    <div class="row">
        <div class="col-sm-12">
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link active" href="#">@Localizer["Attendance"]</a>
                </li>
                @if (ViewBag.HasAssessements == true)
                {
                    <li class="nav-item">
                        <a asp-route-id="@ViewBag.ParentId" asp-action="Index" asp-controller="GroupEvaluations" class="nav-link">@Localizer["Evaluations"]</a>
                    </li>
                }

            </ul>
            <!--table start-->
            <table id="datatable" class="table table-sm table-hover table-striped responsive no-wrap w-100">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Participants.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Participants.ParticipantCode)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Participants.Sex)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Attendance)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.EnrollmentStatus)
                        </th>
                        <th class="text-end d-print-none">@Localizer["Actions"]</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-uppercase fw-bold">
                                @Html.DisplayFor(modelItem => item.Participants.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Participants.ParticipantCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Participants.Sex!.SexId)
                            </td>
                            <td>
                                @if (item.Attendance != null)
                                {
                                    @Html.DisplayFor(modelItem => item.Attendance)

                                    <span> @ViewBag.ProgramAttendanceUnit</span>
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EnrollmentStatus!.EnrollmentStatus)
                            </td>
                            <td class="text-end d-print-none">
                                <div class="btn-group btn-group-sm" role="group" aria-label="Actions">
                                    <a asp-action="Details" asp-route-id="@item.GroupEnrollmentId"
                                   class="btn btn-link text-gray btn-sm d-print-none btn-action"
                                   data-container="body" data-bs-toggle="tooltip" data-placement="top" title="" data-original-title='@Localizer["Details"]'>
                                        <i class="fas fa-info-circle fa-sm" aria-hidden="true"></i>
                                    </a>

                                    @if (ViewBag.Closed != true)
                                    {
                                        <a policy="RequireEditRole" asp-action="Edit" asp-route-id="@item.GroupEnrollmentId"
                                   class="btn btn-link text-gray btn-sm d-print-none btn-action"
                                   data-container="body" data-bs-toggle="tooltip" data-placement="top" title="" data-original-title='@Localizer["Edit"]'>
                                            <i class="fas fa-pencil-alt fa-sm" aria-hidden="true"></i>
                                        </a>

                                        <a policy="RequireEditRole" asp-controller="Participants" asp-action="Edit" asp-route-id="@item.ParticipantId" asp-route-GroupId="@item.GroupId"
                                   class="btn btn-link text-gray btn-sm d-print-none btn-action"
                                   data-container="body" data-bs-toggle="tooltip" data-placement="top" title="" data-original-title='@Localizer["Edit"]'>
                                            <i class="fas fa-user-edit fa-sm" aria-hidden="true"></i>
                                        </a>

                                        <a policy="RequireDeleteRole" asp-action="Delete" asp-route-id="@item.GroupEnrollmentId"
                                   class="btn btn-link text-gray btn-sm d-print-none btn-action"
                                   data-container="body" data-bs-toggle="tooltip" data-placement="top" title="" data-original-title='@Localizer["Delete"]'>
                                            <i class="far fa-trash-alt fa-sm" aria-hidden="true"></i>
                                        </a>
                                    }

                                    @if (ViewBag.NextController != null)
                                    {
                                        <a asp-controller="@ViewBag.NextController"
                                   asp-action="Index"
                                   asp-route-id="@item.GroupEnrollmentId"
                                   class="btn btn-link btn-sm d-print-none btn-action"
                                   data-container="body" data-bs-toggle="tooltip" data-placement="top" title="" data-original-title='@Localizer["Open"]'>
                                            <i class="fas fa-chevron-right fa-sm" aria-hidden="true"></i>
                                        </a>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <!--table end-->
        </div>
    </div>
    <!--datatable end-->
    <!--datatable pagination start-->
    <div class="row">
        <div class="col-sm-12 col-md-5 d-flex align-items-center justify-content-start"><div class="" id="detailfooter"></div></div>
        <div class="col-sm-12 col-md-7 d-flex align-items-center justify-content-end">
            <div class="" id="datatables-pagination"></div>
        </div>
    </div>
    <!--datatable pagination end-->
    <!--footer buttons start-->
    <div class="row mt-5">
        <div class="col">
        </div>
        <div class="col text-end"></div>
    </div>
    <!--footer buttons end-->
</div><!--content end-->
@section Styles {
    @{
    <link href="~/lib/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/lib/sweetalert2/dist/bootstrap-4.min.css" rel="stylesheet" asp-append-version="true" />
        await Html.RenderPartialAsync("_ListStylesPartial");
    }
    }
    @section Scripts {
    @{
    <script src="~/lib/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js" asp-append-version="true"></script>
    <script src="~/lib/sweetalert2/dist/sweetalert2.all.min.js" asp-append-version="true"></script>
        await Html.RenderPartialAsync("_ListScriptsPartial");
    }

    <script>
        $(document).ready(function() {
            $('#btn-close').on('click', function() {
                Swal.fire({
                    title: '@Localizer["Complete Enrollment"]',
                    html: '<div class="mb-3"><div class="form-text">@Localizer["You will set this group as Completed. Please enter Completion Date:"]</div>' +
                        '<input id="close-date" data-date-autoclose="true" autocomplete="off" type="text" class="form-control" placeholder="@System.Globalization.DateTimeFormatInfo.CurrentInfo.ShortDatePattern" /></div>',
                    stopKeydownPropagation: false,
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Confirm',
                    width: '20rem',
                    didOpen: () => {
                        $('#close-date').datepicker();
                    },
                    preConfirm: () => {
                        var selecteddate = $('#close-date').datepicker('getDate');
                        if (selecteddate == null) {
                            Swal.showValidationMessage(`Please select a date`)
                        }
                    },
                }).then((result) => {
                    if (result.isConfirmed) {
                        var selecteddate = document.getElementById("close-date").value;
                        if (selecteddate != null) {
                            $.ajax({
                                type: "post",
                                url: "/Requests/CloseGroup?id=" + "@ViewBag.ParentId" + "&completionDate=" + selecteddate,
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                success: function(data) {
                                    if (data.status) {
                                        Swal.fire({
                                            text: 'Group closed',
                                            confirmButtonText: 'Ok',
                                            confirmButtonColor: '#3085d6',
                                            width: '20rem'
                                        }).then((result) => {
                                            if (result.isConfirmed) {
                                                window.location.replace("@Url.Action("Index", "GroupEnrollments", new { id = ViewBag.ParentId })");
                                            }
                                        })
                                    }
                                }
                            });
                        }
                    } else if (result.isDenied) {
                        Swal.fire('Changes are not saved', '', 'info')
                    }
                })
            });

            $('#btn-open').on('click', function() {
                Swal.fire({
                    title: '@Localizer["Re-open Group"]',
                    text: "@Localizer["Are you sure you want to reopen this Group? Reopening will reset Completion status for all enrolled participants. Updating attendance will be allowed."]",
                    stopKeydownPropagation: false,
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Confirm',
                    width: '20rem'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: "post",
                            url: "/Requests/OpenGroup?id=" + "@ViewBag.ParentId",
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function(data) {
                                if (data.status) {
                                    Swal.fire({
                                        text: 'Group open',
                                        confirmButtonColor: '#3085d6',
                                        confirmButtonText: 'Ok',
                                        width: '20rem'
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            window.location.replace("@Url.Action("Index", "GroupEnrollments", new { id = ViewBag.ParentId })");
                                        }
                                    });
                                }
                            }
                        });
                        Swal.fire('Saved!', '', 'success');
                    } else if (result.isDenied) {
                        Swal.fire('Changes are not saved', '', 'info')
                    }
                })
            });
        });
    </script>
}
