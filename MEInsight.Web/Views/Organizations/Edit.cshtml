@model MEInsight.Entities.Core.Organization

@{
    ViewData["Title"] = @Localizer["Edit"].Value + " " + @Localizer["Organization"].Value;
}

<h2>@Localizer["Edit"]</h2>

<h4>@Localizer["Organization"]</h4>
<hr />
<div class="row">
    <div class="col-md-6 col-sm-8">
        <!--form start-->
        <form asp-action="Edit" id="main-form">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" name="ParentId" value="@ViewBag.ParentId" />
            <input type="hidden" asp-for="OrganizationId" />
            @*[Remote] Validation to validate user input and verify if the Organization Code already exists.*@
            <input type="hidden" value="@Model.OrganizationCode" name="OrganizationCodeInitialValue" />

            <input type="hidden" asp-for="IsTenant" />

            <div class="mb-3 required" asp-enabled="RegistrationDate">
                <!--date start-->
                <label asp-for="RegistrationDate" class="form-label"></label>
                <span class="text-muted small">(@System.Globalization.CultureInfo.CurrentUICulture)</span>
                <!-- use class .date to enable datepicker -->
                <div class="input-group mb-3 date">
                    <input asp-for="RegistrationDate" autocomplete="off" type="text" class="form-control" placeholder="@System.Globalization.DateTimeFormatInfo.CurrentInfo.ShortDatePattern" />
                    <span class="input-group-text input-group-addon">
                        <i class="far fa-calendar-alt"></i>
                    </span>
                </div>
                <span asp-validation-for="RegistrationDate" class="text-danger"></span>
                <!--date end-->
            </div>


            <div class="mb-3 required" asp-enabled="OrganizationCode">
                <!--input start-->
                <label asp-for="OrganizationCode" class="form-label"></label>
                <input asp-for="OrganizationCode" autocomplete="off" class="form-control" />
                <span asp-validation-for="OrganizationCode" class="text-danger"></span>
                <!--input end-->
            </div>


            <div class="mb-3 required" asp-enabled="OrganizationName">
                <!--input start-->
                <label asp-for="OrganizationName" class="form-label"></label>
                <input asp-for="OrganizationName" autocomplete="off" class="form-control" />
                <span asp-validation-for="OrganizationName" class="text-danger"></span>
                <!--input end-->
            </div>


            <div class="mb-3 required" asp-enabled="RefOrganizationTypeId">
                <!--fk select start-->
                <label asp-for="RefOrganizationTypeId" class="form-label"></label>
                <select asp-for="RefOrganizationTypeId" class="form-control form-select" asp-items="ViewBag.RefOrganizationTypeId">
                </select>
                <span asp-validation-for="RefOrganizationTypeId" class="text-danger"></span>
                <!--fk select end-->
            </div>

            <div class="mb-3" asp-enabled="Contact">
                <!--input start-->
                <label asp-for="Contact" class="form-label"></label>
                <input asp-for="Contact" autocomplete="off" class="form-control" />
                <span asp-validation-for="Contact" class="text-danger"></span>
                <!--input end-->
            </div>

            <div class="mb-3" asp-enabled="Phone">
                <!--input start-->
                <label asp-for="Phone" class="form-label"></label>
                <input asp-for="Phone" autocomplete="off" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
                <!--input end-->
            </div>

            <div class="mb-3" asp-enabled="Address">
                <!--textarea start-->
                <label asp-for="Address" class="form-label"></label>
                <textarea asp-for="Address" class="form-control"></textarea>
                <span asp-validation-for="Address" class="text-danger"></span>
                <!--textarea end-->
            </div>

            <div class="mb-3" asp-enabled="Latitude">
                <!--input start-->
                <label asp-for="Latitude" class="form-label"></label>
                <input asp-for="Latitude" autocomplete="off" class="form-control" />
                <span asp-validation-for="Latitude" class="text-danger"></span>
                <!--input end-->
            </div>

            <div class="mb-3" asp-enabled="Longitude">
                <!--input start-->
                <label asp-for="Longitude" class="form-label"></label>
                <input asp-for="Longitude" autocomplete="off" class="form-control" />
                <span asp-validation-for="Longitude" class="text-danger"></span>
                <!--input end-->
            </div>

            @{
                var i = 0;
            }
            @foreach (var item in ViewData["RefLocationTypes"] as IEnumerable<MEInsight.Entities.Reference.RefLocationType>)
            {

                @if (item.LocationLevel == 1)
                {
                    <div class="mb-3 required">
                        <label class="control-label">@item.LocationType</label>
                        <select class="form-control" data-locationlevel="@item.LocationLevel" id="RefLocation@{
                    @item.LocationLevel
}Id" name="RefLocationId[@i]" data-val="true" asp-items="@ViewBag.RefLocationId" required>
                            <option disabled selected></option>
                        </select>
                        <span class="text-danger field-validation-valid" data-valmsg-for="RefLocation@{
                    @item.LocationLevel
}Id" data-valmsg-replace="true"></span>
                    </div>
                }
                else
                {
                    if (item.LocationLevel == (int)ViewData["RefLocationTypesCount"])
                    {
                        <div class="mb-3 required">
                            <label class="control-label">@item.LocationType</label>
                            <select class="form-control" data-locationlevel="@item.LocationLevel" id="RefLocation@{
                    @item.LocationLevel
}Id" name="RefLocationId[@i]" data-val="true">
                                <option disabled selected></option>
                            </select>
                            <span class="text-danger field-validation-valid" data-valmsg-for="RefLocationId" data-valmsg-replace="true"></span>
                        </div>
                    }
                    else
                    {
                        if (item.LocationLevel == 2)
                        {
                            <div class="mb-3 required">
                                <label class="control-label">@item.LocationType</label>
                                <select class="form-control" data-locationlevel="@item.LocationLevel" id="RefLocation@{
                    @item.LocationLevel
}Id" name="RefLocationId[@i]" data-val="true">
                                    <option disabled selected></option>
                                </select>
                                <span class="text-danger field-validation-valid" data-valmsg-for="RefLocation@{
                    @item.LocationLevel
}Id" data-valmsg-replace="true"></span>
                            </div>
                        }
                        else
                        {
                            <div class="mb-3 required">
                                <label class="control-label">@item.LocationType</label>
                                <select class="form-control" data-locationlevel="@item.LocationLevel" id="RefLocation@{
                    @item.LocationLevel
}Id" name="RefLocationId[@i]" data-val="true">
                                    <option disabled selected></option>
                                </select>
                                <span class="text-danger field-validation-valid" data-valmsg-for="RefLocation@{
                    @item.LocationLevel
}Id" data-valmsg-replace="true"></span>
                            </div>
                        }
                    }
                }
                i++;
            }

            @if (AuthorizationService.AuthorizeAsync(User, "RequireMELRole").GetAwaiter().GetResult().Succeeded && Model.IsTenant != true)
            {
                <div class="card my-3">
                    <div class="card-header">@Localizer["M&E options:"]</div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label class="control-label">
                                @Localizer["Create as Organization Unit?"]
                                <i data-content="@Localizer["Set to 'Yes' if this organization will manage other organizations."]"
                               data-placement="top"
                               data-bs-toggle="popover"
                               data-container="body"
                               style="cursor:pointer;"
                               class="fa fa-info-circle text-muted"
                               data-original-title="@Localizer["Organization Unit"]" title="" aria-describedby="popover"></i>
                            </label>
                            <div class="radio" style="margin-top:0;">
                                <label>@Html.RadioButton("IsOrganizationUnit", "true") @Localizer["Yes"]</label>
                            </div>
                            <div class="radio">
                                <label>@Html.RadioButton("IsOrganizationUnit", "false") @Localizer["No"]</label>
                            </div>
                            <span asp-validation-for="IsOrganizationUnit" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ParentOrganizationId" class="form-label"></label>
                            <select asp-for="ParentOrganizationId" class="form-control select2" asp-items="ViewBag.ParentOrganizationId">
                            </select>
                            <span asp-validation-for="ParentOrganizationId" class="text-danger"></span>
                        </div>
                    </div>
                </div>

            }
            else
            {
                <input type="hidden" asp-for="ParentOrganizationId" />
                <input type="hidden" asp-for="IsOrganizationUnit" />
            }

            <!-- button group start -->
            <div class="mb-3 text-end mt-5">
                <a id="cancelbutton" class="btn btn-secondary me-2" asp-action="Index" asp-route-id="@ViewBag.ParentId">
                    <i class="fas fa-times"></i> @Localizer["Cancel"]
                </a>
                <button id="submitbutton" type="submit" value="Save" class="btn btn-primary ladda-button" data-style="expand-left" data-spinner-color="white">
                    <span class="ladda-label">
                        <i class="fas fa-check"></i> @Localizer["Save"]
                    </span>
                </button>
            </div>
            <!-- button group end -->
        </form>
        <!--form end-->
    </div>
</div>

@section Styles {
    @{
        await Html.RenderPartialAsync("_EditStylesPartial");
    }
    }
    @section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    @{
        await Html.RenderPartialAsync("_EditScriptsPartial");
    }
    <script>
        $(document).ready(function() {

        @*  On Edit page load, pre-populate each RefLocation level chained select.
            This record only saves the lower level RefLocationId, this foreach
            populates the JS Ajax request required to populate each parent select
            based on the RefLocationId on this record.
            *@
        @foreach (var item in ViewData["RefLocationParents"] as IEnumerable<MEInsight.Entities.Reference.RefLocation>)
        {
            if (item.RefLocationTypeId == 1)
            {
                <text>
                        $('[data-locationlevel="@(item.RefLocationTypeId)"]').val("@item.RefLocationId");
                </text>
            }
            else
            {
                @:$.ajax({
                @:type: "Post",
                @:url: "/Requests/GetLocations/@item.ParentLocationId",
                @:contentType: "application/json; charset=utf-8",
                @:dataType: "json",
                @:success: function(data) {
                @:             if (data.length) {
                @:$(data).each(function() {
                @:                     if (this.refLocationId == "@item.RefLocationId") {
                @:$('[data-locationlevel="@(item.RefLocationTypeId)"]').append("<option selected value='" + this.refLocationId + "'>" + this.locationName + "</option>");
                @:                     }
                @:                     else {
                @:$('[data-locationlevel="@(item.RefLocationTypeId)"]').append("<option value='" + this.refLocationId + "'>" + this.locationName + "</option>");
                @:                     }
                @:                 })
                @:             }
                @:         }
                @: });
            }
        }

                // Counts the total number of available Location level inputs
                var totalLocationLevels = $('[data-locationlevel]').length;

        // JQuery select2 chained drop-downs by [data-locationlevel]
        // On change or remove event clears select options and
        // requests (Ajax) the new selected location options
        $('[data-locationlevel]').select2({
            theme: "bootstrap4",
            placeholder: " ",
            dropdownAutoWidth: true,
            width: '100%',
            allowClear: true,
            selectOnBlur: true,
            language: 'en'
        })
            .bind("change remove", function(e) {
                e.preventDefault();

                var locationLevel = $(this).data('locationlevel');
                var locationId = $(this).val();

                if (locationId) {
                    $('[data-locationlevel="' + (locationLevel + 1) + '"]').select2({
                        placeholder: "@Localizer["Loading..."]",
                        theme: "bootstrap4",
                        dropdownAutoWidth: true,
                        width: '100%'
                    })

                    $.ajax({
                        type: "Post",
                        url: "/Requests/GetLocations/" + locationId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function(data) {
                            if (data.length) {
                                for (var i = 1; i < (totalLocationLevels); i++) {
                                    $('[data-locationlevel="' + (locationLevel + i) + '"]').empty().val();
                                }

                                $('[data-locationlevel="' + (locationLevel + 1) + '"]').append("<option value=''></option>");
                                $(data).each(function() {
                                    $('[data-locationlevel="' + (locationLevel + 1) + '"]').append("<option value='" + this.refLocationId + "'>" + this.locationName + "</option>");
                                });
                                $('[data-locationlevel="' + (locationLevel + 1) + '"]').select2({
                                    placeholder: "@Localizer["Select..."]",
                                    selectOnBlur: true,
                                    allowClear: true,
                                    language: 'en',
                                    theme: "bootstrap4",
                                    dropdownAutoWidth: true,
                                    width: '100%'
                                });
                            }
                        }
                    });
                }
                else {
                    // if the parente level select was removed - clear chained select options
                    // on each lower level select
                    for (var i = 1; i < (totalLocationLevels); i++) {
                        $('[data-locationlevel="' + (locationLevel + i) + '"]').empty()
                            .select2({
                                placeholder: " ",
                                allowClear: true,
                                language: 'en',
                                theme: "bootstrap4",
                                dropdownAutoWidth: true,
                                width: '100%'
                            });
                    }
                }
            });
                });
    </script>
}
